
FROM php:7.4-fpm-alpine3.12 as builder

WORKDIR /var/www

# installing some container dependencies
RUN apk add bash mysql-client nodejs npm
RUN docker-php-ext-install pdo pdo_mysql

# adding dockerize
RUN apk add --no-cache openssl
ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# directory
COPY . /var/www
RUN chmod +rwx /var/www  && chmod -R 775 storage
RUN rm -rf /var/www/html
RUN cp .env.example .env  
RUN ln -s public html

# app php dependencies
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN composer install \
    && php artisan key:generate \
    && php artisan cache:clear \
    && npm install 

FROM php:7.4-fpm-alpine3.12

RUN apk add bash mysql-client 
RUN docker-php-ext-install pdo pdo_mysql
WORKDIR /var/www
RUN rm -rf /var/ww/html
COPY --from=builder /var/www .

EXPOSE 9000 

ENTRYPOINT [ "php-fpm" ]
